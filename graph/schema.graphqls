type User {
  _id: ID!
  name: String!
  email: String!
  phone: String!
  password: String!
  softDeleted: Boolean!
}

input CreateUserInput {
  name: String!
  email: String!
  phone: String!
  password: String!
  softDeleted: Boolean
}

input UpdateUserInput {
  name: String
  email: String
  phone: String
}

input LoginInput {
  email: String!
  password: String!
}

type DeleteUserResponse {
  deleteUserId: String!
}

type LoginResponse {
  user: User!
  tokenAccess: String!
  tokenRefresh: String!
}

type Query {
  getAllUsers: [User!]!
  getUser(id: String!): User
  paginationSearchUsers(searchUser: String ,page: Int, pageSize: Int): [User]!
}

type Mutation {
  createUser(input: CreateUserInput!): User
  updateUser(id: String!, input: UpdateUserInput!): User
  softDeletedUser(id: ID!): DeleteUserResponse!
  login(input: LoginInput!): LoginResponse!
}
